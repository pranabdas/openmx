"use strict";(self.webpackChunkopenmx=self.webpackChunkopenmx||[]).push([["889"],{6182:function(n,e,t){t.r(e),t.d(e,{default:()=>f,frontMatter:()=>d,metadata:()=>i,assets:()=>l,toc:()=>c,contentTitle:()=>r});var i=JSON.parse('{"id":"diamond","title":"Bandstructure and DOS of diamond","description":"We will run the bandstructure calculation from the OpenMX example file. Here is","source":"@site/docs/diamond.mdx","sourceDirName":".","slug":"/diamond","permalink":"/openmx/diamond","draft":false,"unlisted":false,"editUrl":"https://github.com/pranabdas/openmx/blob/main/docs/diamond.mdx","tags":[],"version":"current","frontMatter":{"title":"Bandstructure and DOS of diamond","sidebar_label":"Diamond bands and DOS"},"sidebar":"docs","previous":{"title":"Convergence tests","permalink":"/openmx/convergence"},"next":{"title":"DFT+U calculation","permalink":"/openmx/dft-u"}}'),a=t("5893"),s=t("65"),o=t("1705");let d={title:"Bandstructure and DOS of diamond",sidebar_label:"Diamond bands and DOS"},r=void 0,l={},c=[{value:"Density of States (DOS)",id:"density-of-states-dos",level:2}];function u(n){let e={code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.p,{children:"We will run the bandstructure calculation from the OpenMX example file. Here is\nthe input file:"}),"\n","\n",(0,a.jsx)(o.Z,{language:"fortran",title:"src/diamond/diamond.in",showLineNumbers:!0,children:"# File Name\nSystem.CurrrentDirectory  ./    # default=./\nSystem.Name               diamond\nDATA.PATH                 /home/svu/slspkd/openmx3.9/DFT_DATA19\nlevel.of.stdout           1    # default=1 (1-3)\nlevel.of.fileout          0    # default=1 (0-2)\n\n# Definition of Atomic Species\nSpecies.Number       1\n<Definition.of.Atomic.Species\n C   C5.0-s2p2d1   C_CA19\nDefinition.of.Atomic.Species>\n\n# Atoms\nAtoms.Number         2\nAtoms.SpeciesAndCoordinates.Unit   Ang # Ang|AU\n<Atoms.SpeciesAndCoordinates\n 1  C  0.000  0.000  0.000   2.0 2.0\n 2  C  0.890  0.890  0.890   2.0 2.0\nAtoms.SpeciesAndCoordinates>\nAtoms.UnitVectors.Unit             Ang # Ang|AU\n<Atoms.UnitVectors\n   1.7800  1.7800  0.0000\n   1.7800  0.0000  1.7800\n   0.0000  1.7800  1.7800\nAtoms.UnitVectors>\n\n# SCF or Electronic System\n\nscf.XcType                  LDA        # LDA|LSDA-CA|LSDA-PW|GGA-PBE\nscf.SpinPolarization        off        # On|Off|NC\nscf.ElectronicTemperature  300.0       # default=300 (K)\nscf.energycutoff           150.0       # default=150 (Ry)\nscf.maxIter                 100        # default=40\nscf.EigenvalueSolver       band        # DC|GDC|Cluster|Band\nscf.Kgrid                  7 7 7       # means n1 x n2 x n3\nscf.Mixing.Type           rmm-diisk    # Simple|Rmm-Diis|Gr-Pulay|Kerker|Rmm-Diisk\nscf.Init.Mixing.Weight     0.30        # default=0.30\nscf.Min.Mixing.Weight      0.001       # default=0.001\nscf.Max.Mixing.Weight      0.700       # default=0.40\nscf.Mixing.History          7          # default=5\nscf.Mixing.StartPulay       5          # default=6\nscf.criterion             1.0e-10      # default=1.0e-6 (Hartree)\n\n#\n# MD or Geometry Optimization\n#\n\nMD.Type                     nomd       # Nomd|Opt|NVE|NVT_VS|NVT_NH\nMD.maxIter                    1        # default=1\nMD.TimeStep                   1        # default=0.5 (fs)\nMD.Opt.criterion         1.0e-5        # default=1.0e-4 (Hartree/bohr)\n\n# Band dispersion\n#\n\nBand.dispersion              on        # on|off, default=off\n<Band.KPath.UnitCell\n3.56  0.00  0.00\n0.00  3.56  0.00\n0.00  0.00  3.56\nBand.KPath.UnitCell>\n# if <Band.KPath.UnitCell does not exist,\n#     the reciprical lattice vector is employed.\nBand.Nkpath                5\n<Band.kpath\n   25  0.0 0.0 0.0   1.0 0.0 0.0   g X\n   25  1.0 0.0 0.0   1.0 0.5 0.0   X W\n   25  1.0 0.5 0.0   0.5 0.5 0.5   W L\n   25  0.5 0.5 0.5   0.0 0.0 0.0   L g\n   25  0.0 0.0 0.0   1.0 0.0 0.0   g X\nBand.kpath>\n\n# MO output\n#\n\nMO.fileout                       off   # on|off\nnum.HOMOs                         1    # default=2\nnum.LUMOs                         1    # default=2\nMO.Nkpoint                        2    # default=1\n<MO.kpoint\n  0.0  0.0  0.0\n  0.0  0.0  0.2\nMO.kpoint>\n\n#\n# DOS and PDOS\n#\n\nDos.fileout                  on        # on|off, default=off\nDos.Erange              -25.0  20.0    # default = -20 20\nDos.Kgrid                12 12 12      # default = Kgrid1 Kgrid2 Kgrid3\nFermiSurfer.fileout          on\n"}),"\n",(0,a.jsx)(e.p,{children:"We can run the calculation using mpirun or submit via job-script:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"mpirun -np 12 openmx diamond.in > diamond.out\n"})}),"\n",(0,a.jsxs)(e.p,{children:["Next step is to extract bandstructure data from ",(0,a.jsx)(e.code,{children:"diamond.Band"})," file:"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"bandgnu13 diamond.Band\n"})}),"\n",(0,a.jsx)(e.p,{children:"Finally, we can plot the bandstructure using gnuplot or any plotting program of\nyour choice:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"gnuplot diamond.GNUBAND\n"})}),"\n",(0,a.jsxs)("picture",{children:[(0,a.jsx)("source",{type:"image/webp",srcSet:t(7154).Z}),(0,a.jsx)("img",{src:t(1464).Z,alt:"diamond-band"})]}),"\n",(0,a.jsx)(e.h2,{id:"density-of-states-dos",children:"Density of States (DOS)"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"DosMain diamond.Dos.val diamond.Dos.vec\n"})}),"\n",(0,a.jsxs)(e.p,{children:["It will ask few options interactively. Use of tetrahedron method is suitable.\nThe output file ",(0,a.jsx)(e.code,{children:"diamond.DOS.Tetrahedron"})," will contain the energy, DOS and\nintegrated DOS columns."]}),"\n",(0,a.jsxs)("picture",{children:[(0,a.jsx)("source",{type:"image/webp",srcSet:t(6589).Z}),(0,a.jsx)("img",{src:t(4398).Z,alt:"diamond-dos"})]}),"\n",(0,a.jsxs)(e.p,{children:["While running the ",(0,a.jsx)(e.strong,{children:"DosMain"})," program, you can also choose PDOS for projected\ndensity of states for each orbitals."]})]})}function f(n={}){let{wrapper:e}={...(0,s.a)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(u,{...n})}):u(n)}},1464:function(n,e,t){t.d(e,{Z:function(){return i}});let i=t.p+"assets/images/diamond-band-1565bf9d0da9765b056e3b36d1adc04e.png"},7154:function(n,e,t){t.d(e,{Z:function(){return i}});let i=t.p+"assets/images/diamond-band-222737146d3b1677e05aff16c2514f20.webp"},4398:function(n,e,t){t.d(e,{Z:function(){return i}});let i=t.p+"assets/images/diamond-dos-5f99aa4e30cae6cd948a93b1c97ad39c.png"},6589:function(n,e,t){t.d(e,{Z:function(){return i}});let i=t.p+"assets/images/diamond-dos-c6de650136bde8cd83d6da1bae8bd072.webp"}}]);
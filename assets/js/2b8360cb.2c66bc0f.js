"use strict";(self.webpackChunkopenmx=self.webpackChunkopenmx||[]).push([[698],{3550:function(n,e,t){t.r(e),t.d(e,{assets:function(){return d},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return p}});var i=t(7462),o=t(3366),s=(t(7294),t(3905)),a=t(3066),r=["components"],l={title:"Bandstructure calculation for silicon",sidebar_label:"Silicon bandstructure"},c=void 0,u={unversionedId:"silicon",id:"silicon",title:"Bandstructure calculation for silicon",description:"Here we will calculate the bandstructure of silicon. First step is to perform",source:"@site/docs/silicon.mdx",sourceDirName:".",slug:"/silicon",permalink:"/openmx/silicon",draft:!1,editUrl:"https://github.com/pranabdas/openmx/blob/main/docs/silicon.mdx",tags:[],version:"current",frontMatter:{title:"Bandstructure calculation for silicon",sidebar_label:"Silicon bandstructure"},sidebar:"docs",previous:{title:"Setup",permalink:"/openmx/"},next:{title:"Diamond bands and DOS",permalink:"/openmx/diamond"}},d={},p=[],f={toc:p};function m(n){var e=n.components,l=(0,o.Z)(n,r);return(0,s.kt)("wrapper",(0,i.Z)({},f,l,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Here we will calculate the bandstructure of silicon. First step is to perform\nthe scf calculation. Here is our input file:"),(0,s.kt)(a.Z,{language:"fortran",title:"src/silicon/silicon.in",showLineNumbers:!0,mdxType:"CodeBlock"},"# File Name\nSystem.CurrrentDirectory  ./    # default=./\nSystem.Name               silicon\nDATA.PATH                 /home/svu/slspkd/openmx3.9/DFT_DATA19\nlevel.of.stdout           1    # default=1 (1-3)\nlevel.of.fileout          0    # default=1 (0-2)\n\n# Definition of Atomic Species\nSpecies.Number       1\n<Definition.of.Atomic.Species\n   Si   Si7.0-s2p2d1   Si_PBE19\nDefinition.of.Atomic.Species>\n\n# Atoms\nAtoms.Number         8\nAtoms.SpeciesAndCoordinates.Unit   Ang # Ang|AU\n<Atoms.SpeciesAndCoordinates           # Unit=Ang.\n     1   Si   0.000000000000  0.000000000000  0.000000000000 2.0 2.0\n     2   Si   0.000000000000  2.715000000000  2.715000000000 2.0 2.0\n     3   Si   2.715000000000  0.000000000000  2.715000000000 2.0 2.0\n     4   Si   2.715000000000  2.715000000000  0.000000000000 2.0 2.0\n     5   Si   1.357500000000  1.357500000000  1.357500000000 2.0 2.0\n     6   Si   1.357500000000  4.072500000000  4.072500000000 2.0 2.0\n     7   Si   4.072500000000  1.357500000000  4.072500000000 2.0 2.0\n     8   Si   4.072500000000  4.072500000000  1.357500000000 2.0 2.0\nAtoms.SpeciesAndCoordinates>\nAtoms.UnitVectors.Unit             Ang #  Ang|AU\n<Atoms.UnitVectors                     # unit=Ang.\n  5.430000000000  0.000000000000  0.000000000000\n  0.000000000000  5.430000000000  0.000000000000\n  0.000000000000  0.000000000000  5.430000000000\nAtoms.UnitVectors>\n\n# SCF or Electronic System\nscf.XcType                 GGA-PBE     # LDA|LSDA-CA|LSDA-PW\nscf.SpinPolarization       off         # On|Off\nscf.ElectronicTemperature  300.0       # default=300 (K)\nscf.energycutoff           160.0       # default=150 (Ry)\nscf.maxIter                100         # default=40\nscf.EigenvalueSolver       band        # Recursion|Cluster|Band\nscf.lapack.dste            dstevx      # dstegr|dstedc|dstevx, default=dstegr\nscf.Kgrid                  7 7 7       # means nk1xnk2xnk3\nscf.Mixing.Type           rmm-diisk    # Simple|Rmm-Diis|Gr-Pulay\nscf.Init.Mixing.Weight     0.010       # default=0.30\nscf.Min.Mixing.Weight      0.001       # default=0.001\nscf.Max.Mixing.Weight      0.200       # default=0.40\nscf.Mixing.History         15          # default=5\nscf.Mixing.StartPulay       5          # default=6\nscf.criterion             1.0e-8       # default=1.0e-6 (Hartree)\n\nBand.dispersion             on        # on|off, default=off\nBand.Nkpath                  4\n<Band.kpath\n    20  0.0000 0.5000 0.0000   0.0000 0.0000 0.0000   L G\n    30  0.0000 0.0000 0.0000   -0.500 0.0000 -0.500   G X\n    10  -0.500 0.0000 -0.500   -0.375 0.2500 -0.375   X U\n    30  -0.375 0.2500 -0.375   0.0000 0.0000 0.0000   U G\nBand.kpath>\n"),(0,s.kt)("p",null,"We can run the calculation using mpirun or submit via job-script:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"mpirun -np 12 openmx silicon.in > silicon.out\n")),(0,s.kt)("p",null,"While the calculation is running, you can monitor the convergence by:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'grep "dUele" silicon.out | tail\n')),(0,s.kt)("p",null,"Next step is to extract bandstructure data from ",(0,s.kt)("inlineCode",{parentName:"p"},"silicon.Band")," file:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"bandgnu13 silicon.Band\n")),(0,s.kt)("p",null,"Finally, we can plot the bandstructure using gnuplot or any program of your\nchoice:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"gnuplot silicon.GNUBAND\n")),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"silicon-band.png",src:t(6141).Z,width:"2223",height:"1570"})))}m.isMDXComponent=!0},6141:function(n,e,t){e.Z=t.p+"assets/images/silicon-band-f3bf246285932d09200658c74103d286.png"}}]);
"use strict";(self.webpackChunkopenmx=self.webpackChunkopenmx||[]).push([[581],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>d});var a=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var p=a.createContext({}),s=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(p.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,r=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=s(t),d=l,k=u["".concat(p,".").concat(d)]||u[d]||m[d]||r;return t?a.createElement(k,o(o({ref:n},c),{},{components:t})):a.createElement(k,o({ref:n},c))}));function d(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=t.length,o=new Array(r);o[0]=u;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var s=2;s<r;s++)o[s]=t[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},1959:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>s});var a=t(7462),l=(t(7294),t(3905));const r={title:"Setting up OpenMX",sidebar_label:"Setup",slug:"/",keywords:["openmx","first principles calculation","density functional theory","DFT","bandstructure calculation"]},o=void 0,i={unversionedId:"setup",id:"setup",title:"Setting up OpenMX",description:"Please refer to the OpenMX website for detailed",source:"@site/docs/setup.md",sourceDirName:".",slug:"/",permalink:"/openmx/",draft:!1,editUrl:"https://github.com/pranabdas/openmx/blob/main/docs/setup.md",tags:[],version:"current",frontMatter:{title:"Setting up OpenMX",sidebar_label:"Setup",slug:"/",keywords:["openmx","first principles calculation","density functional theory","DFT","bandstructure calculation"]},sidebar:"docs",next:{title:"Silicon bandstructure",permalink:"/openmx/silicon"}},p={},s=[{value:"Compile using latest Intel oneAPI libraries",id:"compile-using-latest-intel-oneapi-libraries",level:3}],c={toc:s};function m(e){let{components:n,...t}=e;return(0,l.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Please refer to the ",(0,l.kt)("a",{parentName:"p",href:"http://www.openmx-square.org"},"OpenMX website")," for detailed\ndocumentations. The installation options will depend on your system architecture\nand available libraries. I am installing OpenMX version ",(0,l.kt)("strong",{parentName:"p"},"3.9.9")," at one of NUS\nHPC clusters."),(0,l.kt)("p",null,"Get the source code:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash",metastring:"showLineNumbers",showLineNumbers:!0},"wget http://t-ozaki.issp.u-tokyo.ac.jp/openmx3.9.tar.gz\nwget http://www.openmx-square.org/bugfixed/21Oct17/patch3.9.9.tar.gz\ntar -zxvf openmx3.9.tar.gz\nrm openmx3.9.tar.gz\nmv patch3.9.9.tar.gz openmx3.9/source\ncd openmx3.9/source\ntar -zxvf patch3.9.9.tar.gz\nrm patch3.9.9.tar.gz\n")),(0,l.kt)("p",null,"Load Intel Math Kernel library:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"module load xe_2015\n")),(0,l.kt)("p",null,"You may check the necessary environment variables:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"echo $LD_LIBRARY_PATH\necho $MKLROOT\nenv\n")),(0,l.kt)("p",null,"Open the ",(0,l.kt)("inlineCode",{parentName:"p"},"makefile")," and specify ",(0,l.kt)("inlineCode",{parentName:"p"},"CC"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"FC"),", and ",(0,l.kt)("inlineCode",{parentName:"p"},"LIB")," flags according to your\nsystem and libraries. I am using MPI and Intel Math Kernel Libraries."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"CC = mpicc -O3 -qopenmp -I${MKLROOT}/include/fftw -I${MKLROOT}/include\nFC = mpif90 -O3 -qopenmp -I${MKLROOT}/include/fftw\nLIB= -L${MKLROOT}/include/fftw -lfftw3 -L$MKLROOT/lib/intel64 -lmkl_blacs_intelmpi_lp64 -lmkl_scalapack_lp64 -lmkl_intel_lp64 -lmkl_core -lmkl_intel_thread -lpthread -lifcore\n")),(0,l.kt)("admonition",{type:"warning"},(0,l.kt)("p",{parentName:"admonition"},"Currently I found some issues with the Intel license server while using\n",(0,l.kt)("inlineCode",{parentName:"p"},"xe_2015")," module at NUS HPC clusters. After the module load, you need to export\nfollowing ",(0,l.kt)("inlineCode",{parentName:"p"},"ENV")," variable:"),(0,l.kt)("pre",{parentName:"admonition"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'export "INTEL_LICENSE_FILE=/app1/centos6.3/Intel/xe_2015/composer_xe_2015.3.187/licenses"\n'))),(0,l.kt)("p",null,"If you have ",(0,l.kt)("inlineCode",{parentName:"p"},"xe_2018")," (instead of ",(0,l.kt)("inlineCode",{parentName:"p"},"xe_2015"),"):"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"module load xe_2018\n")),(0,l.kt)("p",null,"Use following flags:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"MKLROOT = /opt/intel/mkl\nCC = mpiicc -O3 -xHOST -ip -no-prec-div -qopenmp -I${MKLROOT}/include/fftw -I${MKLROOT}/include\nFC = mpiifort -O3 -xHOST -ip -no-prec-div -qopenmp\nLIB= -L${MKLROOT}/include/fftw -lfftw3 -L$MKLROOT/lib/intel64 -lmkl_blacs_intelmpi_lp64 -lmkl_scalapack_lp64 -lmkl_intel_lp64 -lmkl_core -lmkl_intel_thread -lpthread -lifcore\n")),(0,l.kt)("p",null,"Once you are set, compile and build the executables:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"make -j8 all\nmake install\n")),(0,l.kt)("p",null,"Compile the DosMain program:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"make DosMain\n")),(0,l.kt)("p",null,"There is ",(0,l.kt)("inlineCode",{parentName:"p"},"bandgnu13.c")," in the source directory, which resulted in error. It\nneeds be compiled using ",(0,l.kt)("inlineCode",{parentName:"p"},"gcc"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"module purge\ngcc bandgnu13.c -lm -o bandgnu13\ncp bandgnu13 ../work/\n")),(0,l.kt)("p",null,"Optionally you may add the ",(0,l.kt)("inlineCode",{parentName:"p"},"openmx3.9/work")," PATH to your ",(0,l.kt)("inlineCode",{parentName:"p"},".bashrc"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'export PATH="/home/svu/{username}/openmx3.9/work:$PATH"\n')),(0,l.kt)("h3",{id:"compile-using-latest-intel-oneapi-libraries"},"Compile using latest Intel oneAPI libraries"),(0,l.kt)("p",null,"Download and install latest Intel oneAPI libraries:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"wget https://registrationcenter-download.intel.com/akdlm/irc_nas/18673/l_BaseKit_p_2022.2.0.262_offline.sh\n\n# install a subset of components from base toolkit\nsh ./l_BaseKit_p_2022.2.0.262_offline.sh -a --silent --eula accept --components intel.oneapi.lin.dpcpp-cpp-compiler:intel.oneapi.lin.mkl.devel\n\n# download and install hpc toolkit\nwget https://registrationcenter-download.intel.com/akdlm/irc_nas/18679/l_HPCKit_p_2022.2.0.191_offline.sh\nsh ./l_HPCKit_p_2022.2.0.191_offline.sh -a --silent --eula accept\n")),(0,l.kt)("p",null,"Initialize MKL env:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"source /opt/intel/oneapi/setvars.sh\n")),(0,l.kt)("p",null,"OpenMX ",(0,l.kt)("inlineCode",{parentName:"p"},"makefile")," configuration:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"MKLROOT = /opt/intel/oneapi/mkl/2022.1.0\nCC = mpiicc -O3 -xHOST -ip -no-prec-div -qopenmp -I${MKLROOT}/include/fftw -I${MKLROOT}/include\nFC = mpiifort -O3 -xHOST -ip -no-prec-div -qopenmp\nLIB= -L${MKLROOT}/lib/intel64 -lmkl_scalapack_lp64 -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core -lifcore -lmkl_blacs_intelmpi_lp64 -liomp5 -lpthread -lm -ldl\n")),(0,l.kt)("p",null,"Here is a sample PBS job-script for NUS HPC cluster:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash",metastring:"showLineNumbers",showLineNumbers:!0},"#!/bin/bash\n#PBS -q parallel12\n#PBS -l select=2:ncpus=12:mpiprocs=12:mem=45GB\n#PBS -j eo\n#PBS -N openmx-test\nsource /etc/profile.d/rec_modules.sh\nmodule load xe_2015\ncd $PBS_O_WORKDIR;\nnp=$( cat  ${PBS_NODEFILE} |wc -l );\nmpirun -np $np -f ${PBS_NODEFILE} openmx input.txt > output.txt\n")),(0,l.kt)("p",null,"Input files, Jupyter notebooks, and other source files used in this tutorial can\nbe found in my GitHub repository: ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/pranabdas/openmx/"},"pranabdas/openmx"),"."),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("ul",{parentName:"admonition"},(0,l.kt)("li",{parentName:"ul"},"Read through the ",(0,l.kt)("a",{parentName:"li",href:"http://www.openmx-square.org/openmx_man3.9/"},"OpenMX manual"),"\nfor various details."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"http://www.openmx-square.org/viewer/index.html"},"OpenMX viewer")," can help you\nchoose certain parameters for the input file e.g., basis configuration. You may\nalso consult this ",(0,l.kt)("a",{parentName:"li",href:"http://www.openmx-square.org/openmx_man3.9/node27.html"},"reference table"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://www.materialscloud.org/work/tools/seekpath"},"SeeK-path")," tool can help\nyou build the k-path."),(0,l.kt)("li",{parentName:"ul"},"The work directory under OpenMX installation contains lots of example files\nfor your reference."))))}m.isMDXComponent=!0}}]);